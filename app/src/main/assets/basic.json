[
  {
    "name": "pwd command",
    "detail": "Use the pwd command to find out the path of the current working directory (folder) you’re in. The command will return an absolute (full) path, which is basically a path of all the directories that starts with a forward slash (/). An example of an absolute path is /home/username"
  },
  {
    "name": "cd command",
    "detail": "To navigate through the Linux files and directories, use the cd command. It requires either the full path or the name of the directory, depending on the current working directory that you’re in.

    Let’s say you’re in /home/username/Documents and you want to go to Photos, a subdirectory of Documents. To do so, simply type the following command: cd Photos.
    
    Another scenario is if you want to switch to a completely new directory, for example,/home/username/Movies. In this case, you have to type cd followed by the directory’s absolute path: cd /home/username/Movies." },
  {
    "name": "ls command",
    "detail": "The ls command is used to view the contents of a directory. By default, this command will display the contents of your current working directory.

    If you want to see the content of other directories, type ls and then the directory’s path. For example, enter ls /home/username/Documents to view the content of Documents"
  },
  {
    "name": "cat command",
    "detail": "cat (short for concatenate) is one of the most frequently used commands in Linux. It is used to list the contents of a file on the standard output (sdout). To run this command, type cat followed by the file’s name and its extension. For instance: cat file.txt.

    Here are other ways to use the cat command:
    
    cat > filename creates a new file
    cat filename1 filename2>filename3 joins two files (1 and 2) and stores the output of them in a new file (3)
    to convert a file to upper or lower case use, cat filename | tr a-z A-Z >output.txt"
  },{
    "name": "cp command",
    "detail": "Use the cp command to copy files from the current directory to a different directory. For instance, the command cp scenery.jpg /home/username/Pictures would create a copy of scenery.jpg (from your current directory) into the Pictures directory."
  },{
    "name": "mv command",
    "detail": "The primary use of the mv command is to move files, although it can also be used to rename files.

    The arguments in mv are similar to the cp command. You need to type mv, the file’s name, and the destination’s directory. For example: mv file.txt /home/username/Documents.
    
    To rename files, the Linux command is mv oldname.ext newname.ext"
  },{
    "name": "mkdir command",
    "detail": "Use mkdir command to make a new directory — if you type mkdir Music it will create a directory called Music.

    There are extra mkdir commands as well:
    
    To generate a new directory inside another directory, use this Linux basic command mkdir Music/Newfile
    use the p (parents) option to create a directory in between two existing directories. For example, mkdir -p Music/2020/Newfile will create the new “2020” file."
  },{
    "name": "rmdir command",
    "detail": "If you need to delete a directory, use the rmdir command. However, rmdir only allows you to delete empty directories."
  },{
    "name": "rm command",
    "detail": "The rm command is used to delete directories and the contents within them. If you only want to delete the directory — as an alternative to rmdir — use rm -r.

    Note: Be very careful with this command and double-check which directory you are in. This will delete everything and there is no undo."
  },{
    "name": "touch command",
    "detail": "The touch command allows you to create a blank new file through the Linux command line. As an example, enter touch /home/username/Documents/Web.html to create an HTML file entitled Web under the Documents directory."
  },{
    "name": "locate command",
    "detail": "You can use this command to locate a file, just like the search command in Windows. What’s more, using the -i argument along with this command will make it case-insensitive, so you can search for a file even if you don’t remember its exact name.

    To search for a file that contains two or more words, use an asterisk (*). For example, locate -i school*note command will search for any file that contains the word “school” and “note”, whether it is uppercase or lowercase"
  },{
    "name": "find command",
    "detail": "Similar to the locate command, using find also searches for files and directories. The difference is, you use the find command to locate files within a given directory.

    As an example, find /home/ -name notes.txt command will search for a file called notes.txt within the home directory and its subdirectories.
    
    Other variations when using the find are:
    
    To find files in the current directory use, find . -name notes.txt
    To look for directories use, / -type d -name notes. txt"
  },{
    "name": "grep command",
    "detail": "Another basic Linux command that is undoubtedly helpful for everyday use is grep. It lets you search through all the text in a given file.

    To illustrate, grep blue notepad.txt will search for the word blue in the notepad file. Lines that contain the searched word will be displayed fully."
  },{
    "name": "sudo command",
    "detail": "Short for “SuperUser Do”, this command enables you to perform tasks that require administrative or root permissions. However, it is not advisable to use this command for daily use because it might be easy for an error to occur if you did something wrong."
  },{
    "name": "kill a process command",
    "detail": "The two most often used signals or options for the kill command are -15 and -9. Issuing a kill -15 <PID> is known as a soft, or polite kill. The -15 (also known as SIGTERM) signal kills the process but allows it to finish any pending processing:

$ kill -15 <PID>
The -9 signal ( SIGKILL ) immediately terminates the program with no regard for current processing. The -9 signal kills it. End of story. End of process:

$ kill -9 <PID>
There are two specific times to use the -9 signal. The first is when you have a runaway process that can't be killed with the -15 signal, and the second is when you need to free system resources immediately without regard for data loss or corruption. This second scenario is rare, but it does happen. In that situation, the only other option might be to reboot the system. Even after killing the process, you might have to reboot anyway—killing certain processes can leave the system in an unstable state"
  },{
    "name": "Update user passwd authentication tokens",
    "detail": "Standard users use the passwd command to change their passwords. It's quick and simple to do. Issue the passwd command and you're prompted to change your password:
$ passwd

Changing password for user khess.
Current password:
New password:
Retype new password:
passwd: all authentication tokens updated successfully.
When changing your password, you'll notice that the system does not respond with any dots, stars, or even blank spaces. This feature is far more secure in situations where someone is shoulder surfing during a password change. There is also no option for showing the password. Again, very secure.

There are additional passwd command options for the root user. For example, if you issue the following command as yourself, check your system's response:
$ passwd -S

Only root can do that.
If the root user issues this command with a username, the command displays user information: 

$ sudo passwd -S khess

khess PS 2019-07-29 0 99999 7 -1 (Password set, SHA512 crypt.)
The real power for system administrators is being able to set a user's password without knowing the current one:

$ sudo passwd khess

New password:
Retype new password:
passwd: all authentication tokens updated successfully.
As root, you can optionally lock and unlock user accounts:

$ sudo passwd -l john

Locking password for user john.
passwd: Success

$ sudo passwd -u john

Unlocking password for user john.
passwd: Success"
  },{
    "name": "ifconfig a network interface",
    "detail": "There are tasks that as a sysadmin you don't do every day, but when you do them you need a power command like ifconfig. I classify this command in the power category because it does many things, but with simple syntax. 

Note: While a user can look at network interface configurations and settings with, you must be root to make changes.
You can also use ifconfig to assign IP addresses to interfaces, change an interface's IP addresses, take an interface offline, bring one online, and more."
  },{
    "name": "Edit text with vi",
    "detail": "The vi (visual) text editor was a clever developer's (Bill Joy) answer to updating the old line editor ex, which Bill Joy also wrote. This program 40+ years later is still the most used Linux command line text editor.

The vi editor is small, with the latest incarnation ( vim aka vi improved) weighing at just over 3MB in size. These days vi is often a symbolic link to vim (in RHEL 8, for example). Its enhancements include multi-level undo, multiple windows and buffers, syntax highlighting, command line editing, file name completion, online help, and visual selection. Open vim and use the following command for a summary of the differences between vim and vi : 

:help vi_diff.txt"
  },{
    "name": "",
    "detail": ""
  },
]
